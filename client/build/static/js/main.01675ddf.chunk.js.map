{"version":3,"sources":["img/2.png","components/views/Pagination/Pagination.js","components/views/LandingPage/LandingPage.js","_actions/types.js","_actions/user_actions.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/BoardWriteForm/BoardWriteForm.js","components/views/BoardDetail/BoardDetail.js","components/views/BoardUpdate/BoardUpdate.js","hoc/auth.js","components/App.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["Pagination","postPerPage","totalBoards","paginate","pageNumbers","console","log","i","Math","ceil","push","className","map","num","onClick","href","LandingPage","user","useSelector","state","localStorage","useState","BoardList","setBoardList","currentPage","setcurrentPage","indexLastBoard","indexFirstBoard","currentBoards","slice","ex","length","useEffect","axios","get","userID","then","response","data","board","alert","item","index","style","border","to","id","createDate","title","userData","isAuth","undefined","display","flexDirection","alignItems","src","imgA","marginTop","width","height","alt","pageNum","LOGIN_USER","REGISTER_USER","AUTH_USER","registerUser","dataToSubmit","request","post","type","payload","auth","withRouter","props","dispatch","useDispatch","Email","setEmail","Password","setPassword","justifyContent","onSubmit","event","preventDefault","loginUser","email","password","loginSuccess","window","setItem","userId","history","value","onChange","currentTarget","RegisterPage","Name","setName","ConfirmPassword","setConfirmPassword","onSubmitHandler","a","name","success","err","errmsg","placeholder","Item","NavBar","position","zIndex","mode","BoardWriteForm","Title","setTitle","Data","setData","paddingTop","marginLeft","marginRight","marginBottom","editor","ClassicEditor","e","getData","handleChange","text","replace","_id","body","writer","content","BoardDetail","match","boardId","params","variable","Board","setBoard","boardDetail","paddingLeft","fontSize","location","BoardUpdate","Auth","SpecificComponent","option","adminRoute","AuthenticationCheck","isAdmin","App","exact","path","component","LoginPage","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.01675ddf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/2.e43f4c64.png\";","import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nfunction Pagination({ postPerPage, totalBoards, paginate }) {\r\n  const pageNumbers = [];\r\n  console.log(\"pageNumbers : \", pageNumbers);\r\n\r\n  for (let i = 0; i < Math.ceil(totalBoards / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav className=\"btn\">\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map((num) => (\r\n          <li key={num}>\r\n            <a onClick={() => paginate(num + 1)} href=\"#/0\">\r\n              {num + 1}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport imgA from \"../../../img/2.png\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\nfunction LandingPage() {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  console.log(localStorage);\r\n\r\n  console.log(\"UserID : \", user);\r\n\r\n  const [BoardList, setBoardList] = useState([]);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [postPerPage] = useState(10);\r\n\r\n  // 현재페이지 가져오기\r\n  const indexLastBoard = currentPage * postPerPage;\r\n  const indexFirstBoard = indexLastBoard - postPerPage;\r\n  const currentBoards = BoardList.slice(indexFirstBoard, indexLastBoard);\r\n\r\n  const ex = () => {\r\n    console.log(\"BoardList : \", BoardList);\r\n    console.log(currentBoards.length);\r\n    console.log(\"indexFirstBoard : \", indexFirstBoard);\r\n    console.log(\"indexLastBoard : \", indexLastBoard);\r\n    console.log(\"postPerPage : \", postPerPage);\r\n  };\r\n\r\n  // 페이지 바꾸기\r\n  const paginate = (pageNum) => setcurrentPage(pageNum);\r\n\r\n  const getBoardList = () => {\r\n    axios\r\n      .get(`/api/board/getBoardList?id=${localStorage.userID}`)\r\n      .then((response) => {\r\n        console.log(\"ID : \", response.data.board);\r\n        if (response.data.board.length > 0) {\r\n          setBoardList(response.data.board);\r\n        } else {\r\n          alert(\"글이 없습니다!\");\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBoardList();\r\n  }, []);\r\n\r\n  const board = currentBoards.map((item, index) => {\r\n    // console.log(\"Item : \", item);\r\n    return (\r\n      <tr key={index}>\r\n        <th style={{ border: \"1px solid black\" }}>\r\n          <Link to={`/board/${item.id}`}>{item.createDate}</Link>\r\n        </th>\r\n        <th style={{ border: \"1px solid black\" }}>\r\n          <Link to={`/board/${item.id}`}>{item.title}</Link>\r\n        </th>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  if (user.userData && !user.userData.isAuth && BoardList !== undefined) {\r\n    return (\r\n      <div\r\n        className=\"main\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          src={imgA}\r\n          style={{ marginTop: \"70px\" }}\r\n          width=\"100%\"\r\n          height=\"300px\"\r\n          alt=\"study\"\r\n          onClick={ex}\r\n        />\r\n        <table\r\n          style={{\r\n            width: \"70%\",\r\n            border: \"1px solid black\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th style={{ border: \"1px solid black\" }}>날짜</th>\r\n              <th style={{ border: \"1px solid black\" }}>글 제목</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody></tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className=\"main\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          src={imgA}\r\n          style={{ marginTop: \"70px\" }}\r\n          width=\"100%\"\r\n          height=\"300px\"\r\n          alt=\"study\"\r\n          onClick={ex}\r\n        />\r\n        <table\r\n          style={{\r\n            width: \"70%\",\r\n            border: \"1px solid black\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th style={{ border: \"1px solid black\" }}>날짜</th>\r\n              <th style={{ border: \"1px solid black\" }}>글 제목</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{board}</tbody>\r\n        </table>\r\n        <Pagination\r\n          postPerPage={postPerPage}\r\n          totalBoards={BoardList.length}\r\n          paginate={paginate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","export const LOGIN_USER = \"login_user\";\r\nexport const REGISTER_USER = \"register_user\";\r\nexport const AUTH_USER = \"auth_user\";\r\nexport const LOGOUT_USER = \"logout_user\";\r\n","import axios from \"axios\";\r\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER } from \"./types\";\r\n\r\nexport function loginUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(\"/api/users/login\", dataToSubmit)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function registerUser(dataToSubmit) {\r\n  const request = axios\r\n    .post(\"/api/users/register\", dataToSubmit)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function auth() {\r\n  const request = axios\r\n    .get(\"/api/users/auth\")\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: request,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"Email\", Email);\r\n    console.log(\"Password\", Password);\r\n\r\n    let body = {\r\n      email: Email,\r\n      password: Password,\r\n    };\r\n\r\n    // axios.post(\"/api/users/login\", body).then((response) => {\r\n    //   if (response.data.isMatch) {\r\n    //     window.localStorage.setItem(\"userEmail\", body.email);\r\n    //     props.history.push(\"/\");\r\n    //     console.log(\"response.data\", response.data);\r\n    //   } else {\r\n    //     alert(\"Error~~~\");\r\n    //   }\r\n    // });\r\n\r\n    dispatch(loginUser(body)).then((response) => {\r\n      console.log(\"RES : \", response);\r\n      if (response.payload.loginSuccess) {\r\n        window.localStorage.setItem(\"userID\", response.payload.userId);\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"Error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Email</label>\r\n        <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n        <br />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <br />\r\n        <button>Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onConfirmPasswordHandler = (event) => {\r\n    setConfirmPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Email\", Email);\r\n    console.log(\"Name\", Name);\r\n    console.log(\"Password\", Password);\r\n    console.log(\"ConfirmPassword\", ConfirmPassword);\r\n\r\n    if (Password !== ConfirmPassword) {\r\n      return alert(\"비밀번호와 비밀번호 확인이 다릅니다!\");\r\n    }\r\n\r\n    let body = {\r\n      email: Email,\r\n      name: Name,\r\n      password: Password,\r\n    };\r\n\r\n    // const register = axios\r\n    //   .post(\"/api/users/register\", body)\r\n    //   .then((response) => response.data);\r\n    // if (register) {\r\n    //   props.history.push(\"/login\");\r\n    //   console.log(register);\r\n    // } else {\r\n    //   alert(\"회원가입을 실패했습니다!\");\r\n    // }\r\n\r\n    dispatch(registerUser(body)).then((response) => {\r\n      if (response.payload.success) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(response.payload.err.errmsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <form\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          onSubmit={onSubmitHandler}\r\n        >\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={Email}\r\n            onChange={onEmailHandler}\r\n            placeholder=\"Enter email\"\r\n          />\r\n\r\n          <label>Name</label>\r\n          <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={Password}\r\n            onChange={onPasswordHandler}\r\n          />\r\n\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={ConfirmPassword}\r\n            onChange={onConfirmPasswordHandler}\r\n          />\r\n          <br />\r\n          <button>회원 가입</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../Sections/Navbar.css\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`/api/users/logout`).then((response) => {\r\n      if (response.data.success) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"로그아웃 실패!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <>\r\n        <Menu className=\"right__menu\">\r\n          <Menu.Item key=\"login\">\r\n            <a href=\"/login\">Signin</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"register\">\r\n            <a href=\"/register\">Signup</a>\r\n          </Menu.Item>\r\n          {/* <Menu.Item key=\"write\">\r\n            <a href=\"/board/write\">글 쓰기</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"app\" onClick={logoutHandler}>\r\n            Logout\r\n          </Menu.Item> */}\r\n        </Menu>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Menu className=\"right__menu\">\r\n          <Menu.Item key=\"write\">\r\n            <a href=\"/board/write\">글 쓰기</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"app\" onClick={logoutHandler}>\r\n            Logout\r\n          </Menu.Item>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React from \"react\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport \"./Sections/Navbar.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{\r\n        position: \"fixed\",\r\n        zIndex: 5,\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">Today I Learned</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_right\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction BoardWriteForm(props) {\r\n  // const writer = props.writer;\r\n  // const title = props.titel;\r\n  // const content = props.content;\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Data, setData] = useState(\"\");\r\n\r\n  const onTitleHandler = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const handleChange = (e, editor) => {\r\n    setData(editor.getData());\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"Title\", Title);\r\n    console.log(\"Data\", Data);\r\n    let text = Data.replace(/&nbsp;/gi, \"\");\r\n    text = text.replace(/(<([^>]+)>)/gi, \"\");\r\n    text = text.replace(/<br\\/>/gi, \"\\n\");\r\n    text = text.replace(\r\n      /<(\\/)?([a-zA-Z]*)(\\s[a-zA-Z]*=[^>]*)?(\\s)*(\\/)?>/gi,\r\n      \"\"\r\n    );\r\n    console.log(\"Text\", text);\r\n    console.log(\"writer\", user.userData._id);\r\n\r\n    let body = {\r\n      writer: user.userData._id,\r\n      title: Title,\r\n      content: text,\r\n    };\r\n\r\n    axios.post(\"/api/board/write\", body).then((response) => {\r\n      console.log(\"response.data :\", response.data);\r\n      if (response.data.success) {\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"글 쓰기를 실패했습니다!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: \"200px\",\r\n        marginLeft: \"10%\",\r\n        marginRight: \"10%\",\r\n      }}\r\n    >\r\n      <h2 style={{ marginLeft: \"45%\" }}>글쓰기</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"글 제목\"\r\n        style={{ marginBottom: \"10px\", width: \"100%\" }}\r\n        value={Title}\r\n        onChange={onTitleHandler}\r\n      />\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        onChange={(e, editor) => {\r\n          handleChange(e, editor);\r\n        }}\r\n      />\r\n      <Button\r\n        onClick={onSubmitHandler}\r\n        style={{ marginTop: \"10px\", marginLeft: \"45%\" }}\r\n      >\r\n        저장하기\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardWriteForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction BoardDetail(props) {\r\n  console.log(props.match);\r\n  let boardId = props.match.params.boardId;\r\n  const variable = { boardId: boardId };\r\n\r\n  const [Board, setBoard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.post(\"/api/board/getBoardDetail\", variable).then((response) => {\r\n      if (response.data.success) {\r\n        console.log(\"variable\", variable);\r\n        console.log(\"BoardDetail : \", response.data.boardDetail);\r\n        setBoard(response.data.boardDetail);\r\n      } else {\r\n        alert(\"정보들을 가져오는데 실패했습니다!\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const deleteBoard = () => {\r\n    axios.post(\"/api/board/deleteBoard\", Board).then((response) => {\r\n      if (response.data.success) {\r\n        window.location.href = \"/\";\r\n      } else {\r\n        alert(\"삭제를 실패했습니다!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {Board !== null && (\r\n        <>\r\n          <label\r\n            style={{\r\n              marginBottom: \"20px\",\r\n              width: \"500px\",\r\n              border: \"1px solid black\",\r\n              paddingLeft: \"10px\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            {console.log(\"Board.title : \", Board[0])}\r\n            {Board[0].title}\r\n          </label>\r\n          <ul\r\n            style={{\r\n              width: \"500px\",\r\n              height: \"400px\",\r\n              border: \"1px solid black\",\r\n              marginBottom: \"30px\",\r\n              paddingTop: \"10px\",\r\n              paddingLeft: \"15px\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            {console.log(\"Board.content : \", Board[0])}\r\n            {Board[0].content}\r\n          </ul>\r\n        </>\r\n      )}\r\n      <div>\r\n        <Link to={`/board/${boardId}/update`}>\r\n          <Button style={{ marginRight: \"50px\" }}>글 수정</Button>\r\n        </Link>\r\n        <Button onClick={deleteBoard}>글 삭제</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardDetail;\r\n","import React, { useState } from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport { Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction BoardUpdate(props) {\r\n  let boardId = props.match.params.boardId;\r\n\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Data, setData] = useState(\"\");\r\n\r\n  const onTitleHandler = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const handleChange = (e, editor) => {\r\n    setData(editor.getData());\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(props);\r\n    console.log(event);\r\n\r\n    console.log(\"Title\", Title);\r\n    console.log(\"Data\", Data);\r\n    let text = Data.replace(/&nbsp;/gi, \"\");\r\n    text = text.replace(/(<([^>]+)>)/gi, \"\");\r\n    text = text.replace(/<br\\/>/gi, \"\\n\");\r\n    text = text.replace(\r\n      /<(\\/)?([a-zA-Z]*)(\\s[a-zA-Z]*=[^>]*)?(\\s)*(\\/)?>/gi,\r\n      \"\"\r\n    );\r\n    console.log(\"Text\", text);\r\n\r\n    let body = {\r\n      boardId: boardId,\r\n      title: Title,\r\n      content: text,\r\n    };\r\n\r\n    axios.post(\"/api/board/updateBoard\", body).then((response) => {\r\n      if (response.data.success) {\r\n        props.history.push(`/board/${boardId}`);\r\n      } else {\r\n        alert(\"수정하지 못했습니다!\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: \"200px\",\r\n        marginLeft: \"10%\",\r\n        marginRight: \"10%\",\r\n      }}\r\n    >\r\n      <h2 style={{ marginLeft: \"45%\" }}>글 쓰기</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"글 제목\"\r\n        style={{ marginBottom: \"10px\", width: \"100%\" }}\r\n        value={Title}\r\n        onChange={onTitleHandler}\r\n      />\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        onChange={(e, editor) => {\r\n          handleChange(e, editor);\r\n        }}\r\n      />\r\n      <Button\r\n        onClick={onSubmitHandler}\r\n        style={{ marginTop: \"10px\", marginLeft: \"45%\" }}\r\n      >\r\n        수정하기\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardUpdate;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { auth } from \"../_actions/user_actions\";\r\n\r\nexport default function Auth(SpecificComponent, option, adminRoute = null) {\r\n  // null : 아무나 출입이 가능한 페이지\r\n  // true : 로그인한 유저만 출입이 가능한 페이지\r\n  // false : 로그인한 유저는 출입 불가능한 페이지\r\n\r\n  const AuthenticationCheck = (props) => {\r\n    let user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(auth()).then((response) => {\r\n        console.log(\"asdf : \", response);\r\n        //로그인 하지 않은 상태\r\n        if (!response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push(\"/login\");\r\n          }\r\n        } else {\r\n          //로그인 한 상태\r\n          if (adminRoute && !response.payload.isAdmin) {\r\n            props.history.push(\"/\");\r\n          } else {\r\n            if (option === false) props.history.push(\"/\");\r\n          }\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return <SpecificComponent {...props} user={user} />;\r\n  };\r\n  return AuthenticationCheck;\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport LandingPage from \"./views/LandingPage/LandingPage\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport BoardWriteForm from \"./views/BoardWriteForm/BoardWriteForm\";\r\nimport BoardDetail from \"./views/BoardDetail/BoardDetail\";\r\nimport BoardUpdate from \"./views/BoardUpdate/BoardUpdate\";\r\nimport Auth from \"../hoc/auth\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n        <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n        <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n        <Route\r\n          exact\r\n          path=\"/board/write\"\r\n          component={Auth(BoardWriteForm, true)}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/board/:boardId\"\r\n          component={Auth(BoardDetail, null)}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/board/:boardId/update\"\r\n          component={Auth(BoardUpdate, true)}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { LOGIN_USER, REGISTER_USER, AUTH_USER } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n    case LOGIN_USER:\r\n      return { ...state, loginSucces: action.payload };\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport Reducer from \"./_reducers\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider\r\n    store={createStoreWithMiddleware(\r\n      Reducer,\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}\r\n  >\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}